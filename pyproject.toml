[project]
name = "embedding-models-service" 
version = "0.1.0"
description = "Embedding (text & multimodal) model serving using the Ray API." 
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "accelerate==1.8.1",
    "colpali-engine==0.3.12",
    "dotenv==0.9.9",
    "fastapi==0.116.1",
    "opencv-python==4.12.0.88",
    "pydantic==2.11.7",
    "protobuf==6.31.1",
    "ray[default,serve]==2.48.0",
    "torch==2.7.0",
    "transformers==4.53.3",
    "uvicorn==0.35.0",
    "flash-attn",
]

[project.optional-dependencies]
test = ["black", "isort", "flake8", "ruff", "djlint==1.36.4"]

[dependency-groups]
dev = [
    "httpx>=0.28.1",
    "ipykernel>=6.30.1",
    "ipywidgets>=8.1.7",
    "pytest>=8.3.5",
    "python-dotenv>=1.1.1",
]

[tool.uv.extra-build-dependencies]
flash-attn = [{ requirement = "torch", match-runtime = true }]

[tool.uv.extra-build-variables]
flash-attn = { FLASH_ATTENTION_SKIP_CUDA_BUILD = "TRUE" }

[tool.pytest.ini_options]
markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')"]
python_files = ["test_*.py", "*_test.py", "tests.py"]

[tool.black]
line-length = 119
exclude = "venv|migrations"

[tool.flake8]
docstring-convention = "all"
ignore = ["D107", "D212", "E501", "W503", "W605", "D203", "D100"]
exclude = "venv|migrations"
max-line-length = 119

# radon
radon-max-cc = 10

[tool.isort]
profile = "black"
multi_line_output = "VERTICAL_HANGING_INDENT"
force_grid_wrap = 2
line_length = 119
skip = ["migrations", "venv"]

[tool.pylint."messages control"]
disable = [
    "line-too-long",
    "trailing-whitespace",
    "missing-function-docstring",
    "consider-using-f-string",
    "import-error",
    "too-few-public-methods",
    "redefined-outer-name",
]

[tool.pylint.master]
ignore = "migrations"

[tool.ruff]
line-length = 119
exclude = ["migrations", "*.ipynb", "venv"]

[tool.ruff.lint]
# Enable flake8-bugbear (`B`) rules and docstring (`D`) rules
select = ["E", "F", "B", "ERA", "D"]
# Never enforce `E501` (line length violations).
ignore = ["E501", "F401", "D203", "D213", "B904", "B008"]
# Avoid trying to fix flake8-bugbear (`B`) violations.
unfixable = ["B"]

[tool.ruff.lint.pydocstyle]
convention = "google"

# Ignore `E402` (import violations) in all `__init__.py` files
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
